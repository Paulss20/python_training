{
  "uid" : "d378e015b9854dfc",
  "name" : "test_add_group[None:name|\\;headerL;footerxp]",
  "fullName" : "test.test_add_group#test_add_group",
  "historyId" : "cb778f5114ba5636379f87dbf5e90329",
  "time" : {
    "start" : 1597394715546,
    "stop" : 1597394716685,
    "duration" : 1139
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert [1:Second Gro...er|| ]2y, ...] == [1:Second Gro...er|| ]2y, ...]\n  Left contains one more item: None:name|\\;headerL;footerxp\n  Use -v to get the full diff",
  "statusTrace" : "app = <fixture.application.Application object at 0x000001F2F4476358>\ndb = <fixture.db.DbFixture object at 0x000001F2F4448A58>, json_groups = None:name|\\;headerL;footerxp, check_ui = False\n\n    def test_add_group(app, db, json_groups, check_ui):\n         group = json_groups\n         with allure.step('Given a group list'):\n              old_groups = db.get_group_list()\n         with allure.step('When I add a group %s to the list' % group):\n              app.group.create(group)\n         with allure.step('Then the new group list is equal to the old list with the added group'):\n              new_groups = db.get_group_list()\n              old_groups.append(group)\n>             assert sorted(old_groups, key=Group.id_or_max) == sorted(new_groups, key=Group.id_or_max)\nE             assert [1:Second Gro...er|| ]2y, ...] == [1:Second Gro...er|| ]2y, ...]\nE               Left contains one more item: None:name|\\;headerL;footerxp\nE               Use -v to get the full diff\n\ntest\\test_add_group.py:16: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "app",
    "time" : {
      "start" : 1597394715484,
      "stop" : 1597394715544,
      "duration" : 60
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "db",
    "time" : {
      "start" : 1597394689373,
      "stop" : 1597394689388,
      "duration" : 15
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "stop",
    "time" : {
      "start" : 1597394689373,
      "stop" : 1597394689373,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "check_ui",
    "time" : {
      "start" : 1597394715545,
      "stop" : 1597394715545,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert [1:Second Gro...er|| ]2y, ...] == [1:Second Gro...er|| ]2y, ...]\n  Left contains one more item: None:name|\\;headerL;footerxp\n  Use -v to get the full diff",
    "statusTrace" : "app = <fixture.application.Application object at 0x000001F2F4476358>\ndb = <fixture.db.DbFixture object at 0x000001F2F4448A58>, json_groups = None:name|\\;headerL;footerxp, check_ui = False\n\n    def test_add_group(app, db, json_groups, check_ui):\n         group = json_groups\n         with allure.step('Given a group list'):\n              old_groups = db.get_group_list()\n         with allure.step('When I add a group %s to the list' % group):\n              app.group.create(group)\n         with allure.step('Then the new group list is equal to the old list with the added group'):\n              new_groups = db.get_group_list()\n              old_groups.append(group)\n>             assert sorted(old_groups, key=Group.id_or_max) == sorted(new_groups, key=Group.id_or_max)\nE             assert [1:Second Gro...er|| ]2y, ...] == [1:Second Gro...er|| ]2y, ...]\nE               Left contains one more item: None:name|\\;headerL;footerxp\nE               Use -v to get the full diff\n\ntest\\test_add_group.py:16: AssertionError",
    "steps" : [ {
      "name" : "Given a group list",
      "time" : {
        "start" : 1597394715546,
        "stop" : 1597394715548,
        "duration" : 2
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 0,
      "hasContent" : false,
      "stepsCount" : 0
    }, {
      "name" : "When I add a group None:name|\\;headerL;footerxp to the list",
      "time" : {
        "start" : 1597394715548,
        "stop" : 1597394716673,
        "duration" : 1125
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 0,
      "hasContent" : false,
      "stepsCount" : 0
    }, {
      "name" : "Then the new group list is equal to the old list with the added group",
      "time" : {
        "start" : 1597394716673,
        "stop" : 1597394716681,
        "duration" : 8
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: assert [1:Second Gro...er|| ]2y, ...] == [1:Second Gro...er|| ]2y, ...]\n  Left contains one more item: None:name|\\;headerL;footerxp\n  Use -v to get the full diff\n",
      "statusTrace" : "  File \"C:\\Users\\User\\PycharmProjects\\python_training\\test\\test_add_group.py\", line 16, in test_add_group\n    assert sorted(old_groups, key=Group.id_or_max) == sorted(new_groups, key=Group.id_or_max)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "shouldDisplayMessage" : true,
      "attachmentsCount" : 0,
      "hasContent" : true,
      "stepsCount" : 0
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 0,
    "hasContent" : true,
    "stepsCount" : 3
  },
  "afterStages" : [ {
    "name" : "db::fin",
    "time" : {
      "start" : 1597394719037,
      "stop" : 1597394719037,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "stop::fin",
    "time" : {
      "start" : 1597394719038,
      "stop" : 1597394720298,
      "duration" : 1260
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "test"
  }, {
    "name" : "suite",
    "value" : "test_add_group"
  }, {
    "name" : "host",
    "value" : "BLA00109"
  }, {
    "name" : "thread",
    "value" : "8176-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test.test_add_group"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "json_groups",
    "value" : "None:name|\\;headerL;footerxp"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "d378e015b9854dfc.json",
  "parameterValues" : [ "None:name|\\;headerL;footerxp" ]
}