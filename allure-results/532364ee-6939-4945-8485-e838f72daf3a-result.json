{"name": "test_add_group[None:name|\\;headerL;footerxp]", "status": "failed", "statusDetails": {"message": "AssertionError: assert [1:Second Gro...er|| ]2y, ...] == [1:Second Gro...er|| ]2y, ...]\n  Left contains one more item: None:name|\\;headerL;footerxp\n  Use -v to get the full diff", "trace": "app = <fixture.application.Application object at 0x000002828EA25EB8>, db = <fixture.db.DbFixture object at 0x000002828EA22278>\njson_groups = None:name|\\;headerL;footerxp, check_ui = False\n\n    def test_add_group(app, db, json_groups, check_ui):\n         group = json_groups\n         with allure.step('Given a group list'):\n              old_groups = db.get_group_list()\n         with allure.step('When I add a group %s to the list' % group):\n              app.group.create(group)\n         with allure.step('Then the new group list is equal to the old list with the added group'):\n              new_groups = db.get_group_list()\n              old_groups.append(group)\n>             assert sorted(old_groups, key=Group.id_or_max) == sorted(new_groups, key=Group.id_or_max)\nE             assert [1:Second Gro...er|| ]2y, ...] == [1:Second Gro...er|| ]2y, ...]\nE               Left contains one more item: None:name|\\;headerL;footerxp\nE               Use -v to get the full diff\n\ntest\\test_add_group.py:16: AssertionError"}, "steps": [{"name": "Given a group list", "status": "passed", "start": 1597358198023, "stop": 1597358198023}, {"name": "When I add a group None:name|\\;headerL;footerxp to the list", "status": "passed", "start": 1597358198024, "stop": 1597358199053}, {"name": "Then the new group list is equal to the old list with the added group", "status": "failed", "statusDetails": {"message": "AssertionError: assert [1:Second Gro...er|| ]2y, ...] == [1:Second Gro...er|| ]2y, ...]\n  Left contains one more item: None:name|\\;headerL;footerxp\n  Use -v to get the full diff\n", "trace": "  File \"C:\\Users\\User\\PycharmProjects\\python_training\\test\\test_add_group.py\", line 16, in test_add_group\n    assert sorted(old_groups, key=Group.id_or_max) == sorted(new_groups, key=Group.id_or_max)\n"}, "start": 1597358199053, "stop": 1597358199056}], "parameters": [{"name": "json_groups", "value": "None:name|\\;headerL;footerxp"}], "start": 1597358198023, "stop": 1597358199057, "uuid": "fe44e9e3-a935-4384-a950-36f465ddbd80", "historyId": "cb778f5114ba5636379f87dbf5e90329", "testCaseId": "8e9b1d07ef6cdb67de3c4a3d82e10652", "fullName": "test.test_add_group#test_add_group", "labels": [{"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_add_group"}, {"name": "host", "value": "BLA00109"}, {"name": "thread", "value": "15524-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_add_group"}]}